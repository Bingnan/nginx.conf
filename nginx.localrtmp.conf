
#user  nobody;
#worker_processes  4;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log  logs/error.log  debug;
#error_log  /home/dbn/opt/nginx/logs/error.log  debug;

pid  logs/nginx.pid;
#pid        /home/dbn/opt/nginx/logs/nginx.pid;


events {
    #worker_connections  1024;
    worker_connections  256;
}

http {

    #allow 124.207.80.66;
    #allow 127.0.0.1;
    #deny all;

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log;
    #access_log  /home/dbn/opt/nginx/logs/access.log;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /myapp {
            # Serve HLS fragment
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            #alias /tmp/hls;
            add_header Cache-Control no-cache;

            # To avoid issues with cross-domain HTTP requests (e.g. during development)
            add_header Access-Control-Allow-Origin *;

            #expires -1;
        }

        location /hls {
            # Serve HLS fragment
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            #alias /tmp/hls;
            add_header Cache-Control no-cache;

            # To avoid issues with cross-domain HTTP requests (e.g. during development)
            #add_header Access-Control-Allow-Origin *;

            #expires -1;
        }

        #location /vod {
        #    root /tmp;
        #}

        # rtmp stat
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            #allow 124.207.80.66;
        }

        location /stat.xsl {
           root /tmp/nginx_stat/;
        }

        #rtmp control
        location /control {
            rtmp_control all;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

rtmp {
    server {
        listen 1935;
        ping 30s;
        notify_method get;

        application myapp {
            live on;

            # sample play/publish handlers
            #on_play http://localhost:8080/on_play;
            #on_publish http://localhost:8080/on_publish;

            hls on;
            hls_path /tmp/myapp;
            hls_fragment 10s;
            hls_playlist_length 10m;
            #hls_sync 100ms;
            hls_continuous on;
            hls_nested on;
            #hls_base_url http://127.0.0.1:8080/myapp/;
            hls_cleanup on;
            # sequential |  timestamp | system(Unix timestamp)
            hls_fragment_naming system;
            #hls_fragment_naming_granularity 500;
            #hls_fragment_slicing plain | aligned;
            #hls_variant;
            #hls_type live | event;

            # encryption
            #hls_keys on;
            #hls_key_path /tmp/keys;
            #hls_key_url http://127.0.0.1:8080;
            #hls_fragment_per_key 10;

            # sample recorder
            #recorder rec1 {
                #record all;
                #record_interval 30s;
                #record_path /tmp/record;
                #record_unique on;
            #}

            #recorder arut {
                #record keyframes;
                #record_max_frames 4;
                #record_path /tmp/snapshot;
                #record_interval 30s;

                #exec_record_done /usr/local/ffmpeg/2.8/bin/ffmpeg -i $path -vcodec png -vframes 1 -an -f rawvideo -s 320x240 -ss 00:00:01 -y /tmp/snapshot/$name.png;
            #}

            recorder duan {
                record keyframes manual;
                record_max_frames 1;
                record_path /tmp/snapshot;

                exec_record_done /usr/local/ffmpeg/2.8/bin/ffmpeg -analyzeduration 10000000 -probesize 10000000 -i "rtmp://127.0.0.1:1935/myapp/mystream live=1" -vframes 1 -an -f rawvideo -ss 00:00:00 -y -f image2 -r 1 /tmp/snapshot/$name.jpg;
            }

            recorder snapshot {
                record keyframes manual;
                record_max_frames 1;
                record_path /tmp/snapshot;

                exec_record_done /usr/local/ffmpeg/2.8/bin/ffmpeg -i /tmp/snapshot/$name.flv -vframes 1 -an -f rawvideo -ss 00:00:00 -y -f image2 /tmp/snapshot/$name.jpg;
            }

        }

        # Video on demand
        application vod {
            play /tmp/Videos;
        }

        # Video on demand over HTTP
        application vod_http {
            play http://localhost:8080/vod/;
            #play http://115.231.105.164:8086/vod/;
        }

        # HLS
        application hls {
            live on;

            hls on;
            hls_path /tmp/hls;
            hls_fragment 5s;
            hls_playlist_length 10m;
            hls_cleanup on;
            hls_continuous off;
        }
    }
}
